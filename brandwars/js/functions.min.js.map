{"version":3,"sources":["functions.js"],"names":["Superstars","Matchtypes","STD","Name","Strength","Technique","Speed","Mind","Nerve","Heart","MicSkill","Charisma","Popularity","Durability","Finisher","Height","Weight","Fatigue","Viewership","Outcomes","SUB","HCR","LDR","CGE","Contextr","a","undefined","Stat","Wrestler","Attribute","Overall","MatchType","total","CheckInjury","Tiredness","Injured","num","Math","random","Injury","Comma","parts","toString","split","replace","join","RealViewers","Viewers","parseInt","SuperstarSelector","Roster","RosterWrap","document","getElementById","innerHTML","keys","i","push","length","ShortName","disabled","Morale","Wins","Losses","StartFight","Wrestlers","console","log","Rank","who","ttl","Win","indexOf","max","apply","Winner","Lose","min","Loser","each","NumGen","PosOut","PosLen","VictoryType","ShowRoster","addEventListener","classList","contains","remove","removeAttribute","add","setAttribute","children","offsetHeight","this","getAttribute","click","inputs","querySelectorAll","checked","Fighters","value"],"mappings":"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","sourcesContent":["//JSHINT-SPECIFIC THINGS\n//jshint multistr: true\n\n//Declared so JSLINT leaves me alone about it\nvar Superstars;\n\nvar Matchtypes = {\n\t'STD' : {\n\t\t'Name'\t\t: 'Standard',\n\t\t'Strength'\t: 1,\n\t\t'Technique'\t: 1,\n\t\t'Speed'\t\t: 1,\n\t\t'Mind'\t\t: 1,\n\t\t'Nerve'\t\t: 1,\n\t\t'Heart'\t\t: 1,\n\t\t'MicSkill'\t: 0,\n\t\t'Charisma'\t: 1,\n\t\t'Popularity': 1,\n\t\t'Durability': 1,\n\t\t'Finisher'\t: 2,\n\t\t'Height'\t: 0.1,\n\t\t'Weight'\t: 0.01,\n\t\t'Fatigue'\t: 0.5,\n\t\t'Viewership': 100,\n\t\t'Outcomes'\t: [\n\t\t\t[9.5\t, 'Disqualification'],\n\t\t\t[8.5\t, 'Knockout'],\n\t\t\t[7.5\t, 'Submission'],\n\t\t\t[0.0\t, 'Pinfall']\n\t\t]\n\t},\n\t'SUB' : {\n\t\t'Name'\t\t: 'Submission',\n\t\t'Strength'\t: 1,\n\t\t'Technique'\t: 2,\n\t\t'Speed'\t\t: 1,\n\t\t'Mind'\t\t: 1.5,\n\t\t'Nerve'\t\t: 1,\n\t\t'Heart'\t\t: 1,\n\t\t'MicSkill'\t: 0,\n\t\t'Charisma'\t: 1,\n\t\t'Popularity': 1,\n\t\t'Durability': 1,\n\t\t'Finisher'\t: 1.5,\n\t\t'Height'\t: 0.1,\n\t\t'Weight'\t: 0.01,\n\t\t'Fatigue'\t: 1,\n\t\t'Viewership': 150,\n\t\t'Outcomes'\t: [\n\t\t\t[9.5\t, 'Pass-Out'],\n\t\t\t[0.0\t, 'Submission']\n\t\t]\n\t},\n\t'HCR' : {\n\t\t'Name'\t\t: 'Hardcore',\n\t\t'Strength'\t: 1,\n\t\t'Technique'\t: 1,\n\t\t'Speed'\t\t: 1,\n\t\t'Mind'\t\t: 1,\n\t\t'Nerve'\t\t: 2,\n\t\t'Heart'\t\t: 1.5,\n\t\t'MicSkill'\t: 0,\n\t\t'Charisma'\t: 1,\n\t\t'Popularity': 1,\n\t\t'Durability': 2,\n\t\t'Finisher'\t: 1,\n\t\t'Height'\t: 0.1,\n\t\t'Weight'\t: 0.01,\n\t\t'Fatigue'\t: 3,\n\t\t'Viewership': 200,\n\t\t'Outcomes'\t: [\n\t\t\t[9.5\t, 'Submission'],\n\t\t\t[8.5\t, 'Knockout'],\n\t\t\t[0.0\t, 'Pinfall']\n\t\t]\n\t},\n\t'LDR' : {\n\t\t'Name'\t\t: 'Ladder',\n\t\t'Strength'\t: 1,\n\t\t'Technique'\t: 1,\n\t\t'Speed'\t\t: 2,\n\t\t'Mind'\t\t: 1,\n\t\t'Nerve'\t\t: 2,\n\t\t'Heart'\t\t: 1,\n\t\t'MicSkill'\t: 0,\n\t\t'Charisma'\t: 1,\n\t\t'Popularity': 1,\n\t\t'Durability': 1.5,\n\t\t'Finisher'\t: 1,\n\t\t'Height'\t: 0.1,\n\t\t'Weight'\t: 0.01,\n\t\t'Fatigue'\t: 1.5,\n\t\t'Viewership': 300,\n\t\t'Outcomes'\t: [\n\t\t\t[0.0\t, 'Retrieving the suspended object']\n\t\t]\n\t},\n\t'CGE' : {\n\t\t'Name'\t\t: 'Cage',\n\t\t'Strength'\t: 1,\n\t\t'Technique'\t: 1,\n\t\t'Speed'\t\t: 1.2,\n\t\t'Mind'\t\t: 1,\n\t\t'Nerve'\t\t: 1.5,\n\t\t'Heart'\t\t: 2,\n\t\t'MicSkill'\t: 0,\n\t\t'Charisma'\t: 1,\n\t\t'Popularity': 1,\n\t\t'Durability': 1.5,\n\t\t'Finisher'\t: 1,\n\t\t'Height'\t: 0.1,\n\t\t'Weight'\t: 0.01,\n\t\t'Fatigue'\t: 2,\n\t\t'Viewership': 250,\n\t\t'Outcomes'\t: [\n\t\t\t[9.0\t, 'Submission'],\n\t\t\t[8.0\t, 'Pinfall'],\n\t\t\t[0.0\t, 'Climb-Out']\n\t\t]\n\t}\n};\n\n//Make sure any given Superstar is attached to it's appropriate object\nfunction Contextr(a) {\n\tif (a.Strength === undefined) {\n\t\treturn Superstars[a];\n\t} else {\n\t\treturn a;\n\t}\n}\n\n//Get a Stat\nfunction Stat(Wrestler,Attribute) {\n\tWrestler = Contextr(Wrestler);\n\treturn Wrestler[Attribute];\n}\n\n//Calculate Overall\nfunction Overall(Wrestler,MatchType) {\n\tvar total = 0;\n\t//Standard\n\tif (MatchType === undefined) {\n\t\ttotal += Stat(Wrestler,'Strength');\n\t\ttotal += Stat(Wrestler,'Technique');\n\t\ttotal += Stat(Wrestler,'Speed');\n\t\ttotal += Stat(Wrestler,'Mind');\n\t\ttotal += Stat(Wrestler,'Nerve');\n\t\ttotal += Stat(Wrestler,'Heart');\n\t\ttotal += Stat(Wrestler,'Charisma');\n\t\ttotal += Stat(Wrestler,'Popularity');\n\t\ttotal += Stat(Wrestler,'Durability');\n\t\ttotal += Stat(Wrestler,'Finisher');\n\t//Match-aware\n\t} else {\n\t\ttotal += Stat(Wrestler,'Strength') * Matchtypes[MatchType].Strength;\n\t\ttotal += Stat(Wrestler,'Technique') * Matchtypes[MatchType].Technique;\n\t\ttotal += Stat(Wrestler,'Speed') * Matchtypes[MatchType].Speed;\n\t\ttotal += Stat(Wrestler,'Mind') * Matchtypes[MatchType].Mind;\n\t\ttotal += Stat(Wrestler,'Nerve') * Matchtypes[MatchType].Nerve;\n\t\ttotal += Stat(Wrestler,'Heart') * Matchtypes[MatchType].Heart;\n\t\ttotal += Stat(Wrestler,'Charisma') * Matchtypes[MatchType].Charisma;\n\t\ttotal += Stat(Wrestler,'Popularity') * Matchtypes[MatchType].Popularity;\n\t\ttotal += Stat(Wrestler,'Durability') * Matchtypes[MatchType].Durability;\n\t\ttotal += Stat(Wrestler,'Finisher') * Matchtypes[MatchType].Finisher;\n\t}\n\treturn total;\n}\n\n//Injury-checker\nfunction CheckInjury(Wrestler,MatchType) {\n\t//Get wrestler\n\tWrestler = Contextr(Wrestler);\n\t//Update fatigue\n\tif (MatchType !== undefined) {\n\t\tWrestler.Fatigue += Matchtypes[MatchType].Fatigue;\n\t}\n\t//Get updated fatigue\n\tvar Tiredness = Wrestler.Fatigue;\n\t//Injury calculator mini function\n\tfunction Injured(num) {\n\t\tif ( Math.random() > num ) {\n\t\t\tWrestler.Injury = true;\n\t\t\treturn 'disabled';\n\t\t}\n\t}\n\t//Odds of injury\n\tif (Tiredness > 10) {\n\t\tWrestler.Injury = true;\n\t} else if (Tiredness === 10) {\n\t\tInjured(0.8);\n\t} else if (Tiredness >= 9) {\n\t\tInjured(0.85);\n\t} else if (Tiredness >= 8) {\n\t\tInjured(0.9);\n\t} else {\n\t\tInjured(0.95);\n\t}\n}\n\n//Comma-Separate Large Numbers\nfunction Comma(num) {\n    var parts = num.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n}\n\n//Get Win type\nfunction VictoryType(MatchType) {\n\tvar NumGen = Math.random() * 10;\n\tvar PosOut = Matchtypes[MatchType].Outcomes;\n\tvar PosLen = PosOut.length;\n\tfor (var i = 0; i<PosLen; i++) {\n\t\tif (NumGen >= PosOut[i][0]) {\n\t\t\tconsole.log(PosOut[i][1]);\n\t\t\treturn PosOut[i][1];\n\t\t}\n\t}\n}\n\n//Get Number of Viewers\nfunction RealViewers(Viewers) {\n\tViewers = parseInt(Viewers * 1000);\n\tif (Viewers >= 1000) {\n\t\treturn Viewers;\n\t} else {\n\t\treturn 1000;\n\t}\n}\n\n//Layout Roster for selection\nfunction SuperstarSelector(Roster) {\n\t//Get the element that the roster will be listed in\n\tvar RosterWrap = document.getElementById('Roster');\n\t//Empty it\n\tRosterWrap.innerHTML = '';\n\t//Create an array for all the brand's superstars\n\tvar keys = [];\n    //Loop through the roster, adding them to the above array\n    for (var i in Roster) {\n        keys.push(i);\n    }\n    //Loop through each wrestler\n    for (i=0; i<keys.length; i++) {\n\t    //Get their object name\n    \tvar ShortName = keys[i];\n    \t//Get their actual name\n    \tvar Wrestler = Contextr(ShortName);\n    \t//Define teh disabled variable\n    \tvar disabled = '';\n    \t//If the wrestler is injured, set them as disabled\n    \tif (Wrestler.Injury === true) { \n\t    \tdisabled = 'disabled';\n\t    }\n\t    //Populate the roster-select element with this, for each wrestler\n    \tRosterWrap.innerHTML \n    \t\t+= \t'<input type=\"checkbox\" id=\"' + ShortName + '\" ' + disabled + '>'\n    \t\t+ \t'<label class=\"Wrestler\" style=\"background-image:url(img/' + ShortName + '.png)\" for=\"' + ShortName + '\">'\n    \t\t+ \t\t'<div class=\"DarkBG\">'\n\t\t    + \t\t\t'<p class=\"Name\">'\n\t\t    + \t\t\t\tWrestler.Name\n\t\t    + \t\t\t'</p>'\n\t\t    + \t\t\t'<p class=\"Overall\">'\n\t\t    + \t\t\t\t'<b>O</b><br>' + parseInt(Overall(ShortName))\n\t\t    + \t\t\t'</p>'\n\t\t    + \t\t\t'<p class=\"Morale\">'\n\t\t    + \t\t\t\t'<b>M</b><br>' + Wrestler.Morale\n\t\t    + \t\t\t'</p>'\n\t\t    + \t\t\t'<p class=\"Fatigue\">'\n\t\t    + \t\t\t\t'<b>F</b><br>' + Wrestler.Fatigue\n\t\t    + \t\t\t'</p>'\n\t\t    + \t\t\t'<p class=\"Wins\">'\n\t\t    + \t\t\t\t'<b>W</b><br>' + Wrestler.Wins\n\t\t    + \t\t\t'</p>'\n\t\t    + \t\t\t'<p class=\"Losses\">'\n\t\t    + \t\t\t\t'<b>L</b><br>' + Wrestler.Losses\n\t\t    + \t\t\t'</p>'\n\t    \t+ \t\t'</div>'\n    \t\t+ \t'</label>'\n    \t;\n    }\n}\n\n//Fight simulator\nfunction StartFight(Wrestlers,MatchType){\n\t\n\t//Log start of fight\n\tconsole.log('FIGHT STARTED');\n\t\n\t//If there is no opponent\n\tif (Wrestlers.length === 1) {\n\t\tdocument.getElementById('WinnerName').innerHTML \n\t\t\t= '<p>'\n\t\t\t+ Stat(Wrestlers[0],'Name')\n\t\t\t+ ' won by default. '  \n\t\t\t+ Comma(RealViewers()) \n\t\t\t+ ' people were disappointed.'\n\t\t\t+ '</p>'\n\t\t\t+ document.getElementById('WinnerName').innerHTML\n\t\t;\n\t\n\t//If there is one or more opponents\n\t} else {\n\t\t\n\t\t//The match rankings\n\t\tvar Rank = [];\n\t\t\n\t\t//The match rating, starting with the match type\n\t\tvar Viewers = Matchtypes[MatchType].Viewership;\n\t\tconsole.log('Viewers',Viewers);\n\t\t\n\t\t//Loop through each wrestler in the match\n\t\tfor (var i=0; i<Wrestlers.length; i++) {\n\t\t\t\n\t\t\t//Get their stats\n\t\t\tvar who = Contextr(Wrestlers[i]);\n\t\t\tvar ovr = Overall(who,MatchType);\n\t\t\tvar rnd = (Math.random() * 25);\n\t\t\tvar mrl = who.Morale;\n\t\t\tvar ftg = who.Fatigue;\n\t\t\tvar ttl = ovr + rnd + mrl - ftg;\n\t\t\t\n\t\t\t//Add those stats to the match rankings array\n\t\t\tRank.push( ttl );\n\t\t\t\n\t\t\t//And add their popularity to the match rating\n\t\t\tViewers += who.Popularity * 10;\n\t\t}\n\t\t\n\t\t//Get the position of the highest overall, and assign that to a wrestler\n\t\tvar Win = Rank.indexOf(Math.max.apply(Math, Rank));\n\t\tvar Winner = Contextr([Wrestlers[Win]]);\n\t\t\n\t\t//Get the position of the lowset overall, and assign that to a wrestler\n\t\tvar Lose = Rank.indexOf(Math.min.apply(Math, Rank));\n\t\tvar Loser = Contextr([Wrestlers[Lose]]);\n\t\t\n\t\t//Subtract the difference between the winner's rank and the loser's\n\t\tViewers -= (Rank[Win] - Rank[Lose]) * 10;\n\t\t\n\t\t//Adjust everyone's stats\n\t\tfor (var each in Superstars) {\n\t\t\t//Define THIS wrestler\n\t\t\tvar Wrestler = Contextr(each);\n\t\t\t//If THIS wrestler is in the match\n\t        if ( Wrestlers.indexOf(each) > -1 ) {\n\t\t        \n\t\t        //MAYBE SEND THIS TO A MATCH FUNCTION??\n\t\t        \n\t\t        if (Wrestler.Morale <= 9.5){\n\t\t        \tWrestler.Morale += 0.25;\n\t\t        }\n\t\t        \n\t\t\t\t//Check each participating superstar for injury\n\t\t\t\tCheckInjury(each,MatchType);\n\t\t\t\t\n\t\t\t//If THIS wrestler is NOT in the match\n\t        } else {\n\t\t        if (Wrestler.Morale >= 0.25){\n\t\t        \tWrestler.Morale -= 0.25;\n\t\t        }\n\t\t        if (Wrestler.Fatigue >= 0.25){\n\t\t\t\t\tWrestler.Fatigue -= 0.25;\n\t\t\t\t}\n\t\t\t\tif (Wrestler.Injury === true && Wrestler.Fatigue <= 5){\n\t\t        \tWrestler.Injury = false;\n\t\t        }\n\t        }\n\t    }\n\t\t//Adjust stats of the winning superstar\n\t\tWinner.Wins += 1;\n\t\tif (Winner.Morale <= 8.5){\n\t\t\tWinner.Morale += 1;\n\t\t}\n\t\tif (Winner.Fatigue >= 0.25){\n\t\t\tWinner.Fatigue -= 0.25;\n\t\t}\n\t\t//Adjust stats of the losing superstar\n\t\tLoser.Losses += 1;\n\t\tif (Loser.Morale >= 0.5){\n\t\t\tLoser.Morale -= 0.5;\n\t\t}\n\t\tif (Loser.Fatigue <= 9.5){\n\t\t\tLoser.Fatigue += 0.5;\n\t\t}\n\t\t//Output winner\n\t\tdocument.getElementById('WinnerName').innerHTML \n\t\t\t= '<p><b class=\"winner\">'\n\t\t\t+ Winner.Name\n\t\t\t+ '</b> def. <b class=\"loser\">' \n\t\t\t+ Loser.Name \n\t\t\t+ '</b> via <b class=\"method\">'\n\t\t\t+ VictoryType(MatchType)\n\t\t\t+ '</b>, with <b class=\"viewers\">' \n\t\t\t+ Comma(RealViewers(Viewers)) \n\t\t\t+ ' viewers</b>.'\n\t\t\t+ '</p>'\n\t\t\t+ document.getElementById('WinnerName').innerHTML\n\t\t;\n\t}\t\n\tSuperstarSelector(Superstars);\n}\n\n//Hook up the roster reveal\nvar ShowRoster = document.getElementById('RosterButton');\nvar RosterWrap = document.getElementById('RosterWrapper');\nShowRoster.addEventListener('click', function(){\n\tvar className = 'open';\n\tif (RosterWrap.classList.contains(className) && ShowRoster.classList.contains(className)) {\n\t\tShowRoster.classList.remove(className);\n\t\tRosterWrap.classList.remove(className);\n\t\tRosterWrap.removeAttribute('style');\n\t} else {\n\t\tShowRoster.classList.add(className);\n\t\tRosterWrap.classList.add(className);\n\t\tRosterWrap.setAttribute('style','height:'+RosterWrap.children[0].offsetHeight+'px;');\n\t}\n});\n\n//Rematch!\ndocument.getElementById('Rematch').addEventListener('click', function(){\n\tvar Wrestlers = this.getAttribute('data-rematch').split(',');\n\tfor (var i=0; i<Wrestlers.length; i++) {\n\t\tvar Wrestler = Wrestlers[i];\n\t\tconsole.log(Wrestler, Wrestlers);\n\t\tdocument.getElementById(Wrestler).click();\n\t}\n});\n\n\n//All-In\ndocument.getElementById('AllIn').addEventListener('click',function(){\n\tvar inputs = document.querySelectorAll('input:not(:disabled)');\n\tfor (var i=0; i<inputs.length; i++) {\n\t\tinputs[i].checked = true;\n\t}\n});\n\n\n//Hook up the fight button\ndocument.getElementById('Fight').addEventListener('click', function(){\n\tvar Wrestlers = document.querySelectorAll('input:checked');\n\tvar Fighters = [];\n\tvar MatchType = document.getElementById('MatchType').value;\n\tfor (var i=0; i<Wrestlers.length; i++) {\n\t\tFighters.push(Wrestlers[i].getAttribute('id'));\n\t}\n \tdocument.getElementById('Rematch').setAttribute('data-rematch', Fighters);\n\tStartFight(Fighters,MatchType);\n});\n\n//Init!\n(function Init(){\n\tSuperstarSelector(Superstars);\n\tShowRoster.click();\n})();"]}