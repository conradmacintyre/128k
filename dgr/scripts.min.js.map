{"version":3,"sources":["scripts.js"],"names":["uncommonPhrases","rarePhrases","slots","concat","push","Math","floor","random","length","phraseNumber","splice","winCombos","squares","document","getElementsByClassName","bingoCalled","blackoutCalled","winYet","blackout","forEach","combo","bingo","square","classList","contains","getElementById","add","addEventListener","el","phrase","innerHTML","_el","remove"],"mappings":"yBAAA,IAiBMA,EAAkB,CACpB,2BACA,oBACA,YACA,2BACA,iCACA,iCACA,0BACA,gBACA,uBACA,iBACA,WACA,qBACA,mCACA,YACA,OACA,uBACA,iBACA,gBACA,gBACA,eACA,sBACA,yBAGEC,EAAc,CAChB,0BACA,wBACA,+BACA,0BACA,8BACA,kBACA,YACA,cACA,6BACA,cACA,iBACA,aAIAC,EAAK,GAAAC,OA1Da,CAClB,kBACA,6BACA,iCACA,oBACA,6BACA,gBACA,oBACA,wBACA,YACA,SACA,mBACA,YACA,SACA,2BA8CJ,IADAD,EAAME,KAAKH,EAAYI,KAAKC,MAAMD,KAAKE,SAAWN,EAAYO,UACvDN,EAAMM,OAAS,IAAI,CACtB,IAAIC,EAAeJ,KAAKC,MAAMD,KAAKE,SAAWP,EAAgBQ,QAC9DN,EAAME,KAAKJ,EAAgBS,IAC3BT,EAAgBU,OAAOD,EAAa,GAGxC,MAAME,EAAY,CACd,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,EAAE,EAAE,EAAE,EAAE,IACT,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,GAAG,GAAG,GAAG,IACZ,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,KAGXC,2GAAcC,SAASC,uBAAuB,uOAE9CC,GAAc,EAEdC,GAAiB,EAgBrB,SAASC,IACL,IAAIC,GAAW,EACfP,EAAUQ,SAAS,SAACC,GAChB,IAAIC,GAAQ,EACZD,EAAMD,SAAS,SAACG,GACPV,EAAQU,EAAO,GAAGC,UAAUC,SAAS,aAGtCH,GAAQ,EACRH,GAAW,MAGnBG,IAzBEN,IACFA,GAAc,EACdF,SAASY,eAAe,SAASF,UAAUG,IAAI,gBAyBnDR,IApBMF,IACFA,GAAiB,EACjBH,SAASY,eAAe,YAAYF,UAAUG,IAAI,aAqCxDb,SAASc,iBAAkB,YAVzBf,EAAQO,SAAS,SAACS,GACd,IAAMA,EAAGL,UAAUC,SAAS,cAAgB,CACxC,IAAIK,EAASxB,KAAKC,MAAOD,KAAKE,SAAWL,EAAMM,QAC/CoB,EAAGE,UAAY5B,EAAM2B,GACrB3B,EAAMQ,OAAOmB,EAAQ,GAEzBD,EAAGD,iBAAkB,SAAS,WAZtC,IAAqBI,GAAAA,EAaGH,GAZhBL,UAAUC,SAAS,WAAaO,EAAIR,UAAUS,OAAO,WAAaD,EAAIR,UAAUG,IAAI,WACxFT","sourcesContent":["const commonPhrases = [\n    'Checkpoint City',\n    'Dave hollers random noises',\n    'Dave laughs at this own demise',\n    'Dave makes a face',\n    'Dave says nonsense word(s)',\n    'Fire (it) up!',\n    'Hello my friends!',\n    'It\\'s a beautiful city',\n    'Let\\'s Go!',\n    'NOOOO!',\n    'Smack! Dat! Axe!',\n    'Take care',\n    'YEESS!',\n    'Zoom in on Dave\\'s face'\n];\n\nconst uncommonPhrases = [\n    '...look like an idiot...',\n    'Big dumb / brain!',\n    'Boom-Boom',\n    'Cheese / Gouda / Cheddar',\n    'Dave mentions another streamer',\n    'Dave mentions his college days',\n    'Dave breaks out in song',\n    'DGR Guarantee',\n    '*Food-coloured* Pipe',\n    'Gamer / gaming',\n    'Gird up!',\n    'He who waits, dies',\n    'It\\'s not a troll level unless...',\n    'Learning!',\n    'Lore',\n    'New Jersey / Trolled',\n    'P/Clutch Daddy',\n    'Progress City',\n    'Wait... what?',\n    'Well endowed',\n    'When I speak, I die',\n    'Ya boy / Makin\\' plays'\n];\n\nconst rarePhrases = [\n    '...take our first clear',\n    'Dave leaves the frame',\n    'Dave lowers the green screen',\n    'Dave wears a cheese hat',\n    'Fill thine horn (with oil)!',\n    'Gird thy loins!',\n    'Holy rip!',\n    'Hot garbage',\n    'One more shot at the title',\n    'Rapscallion',\n    'Why do I talk?',\n    'YOLO Bolo'\n];\n\n// Bingo Slots Array-Maker\nlet slots = [...commonPhrases];\nslots.push(rarePhrases[Math.floor(Math.random() * rarePhrases.length)]);\nwhile (slots.length < 25) {\n    let phraseNumber = Math.floor(Math.random() * uncommonPhrases.length);\n    slots.push(uncommonPhrases[phraseNumber]);\n    uncommonPhrases.splice(phraseNumber,1);\n}\n\nconst winCombos = [\n    [1,2,3,4,5],\n    [6,7,8,9,10],\n    [11,12,13,14,15],\n    [16,17,18,19,20],\n    [21,22,23,24,25],\n    [1,6,11,16,21],\n    [2,7,12,17,22],\n    [3,8,13,18,23],\n    [4,9,14,19,24],\n    [5,10,15,20,25],\n    [1,7,13,19,25],\n    [5,9,13,17,21]\n];\n\nlet squares = [...document.getElementsByClassName('bingo-square')];\n\nlet bingoCalled = false;\n\nlet blackoutCalled = false;\n\nfunction doBingo() {\n    if ( !bingoCalled ) {\n        bingoCalled = true;\n        document.getElementById('bingo').classList.add('animate');\n    }\n}\n\nfunction doBlackout() {\n    if ( !blackoutCalled ) {\n        blackoutCalled = true;\n        document.getElementById('blackout').classList.add('animate');\n    }\n}\n\nfunction winYet() {\n    let blackout = true;\n    winCombos.forEach( (combo) => {\n        let bingo = true;\n        combo.forEach( (square) => {\n            if ( squares[square-1].classList.contains('checked') ) {\n                // do nothing\n            } else {\n                bingo = false;\n                blackout = false;\n            }\n        });\n        bingo ? doBingo() : null;\n    });\n    blackout ? doBlackout() : null;\n}\n\nfunction classToggle(_el) {\n    _el.classList.contains('checked') ? _el.classList.remove('checked') : _el.classList.add('checked');\n    winYet();\n}\n\nfunction initBingo() {\n    squares.forEach( (el) => {\n        if ( !el.classList.contains('free-space') ) {\n            let phrase = Math.floor( Math.random() * slots.length );\n            el.innerHTML = slots[phrase];\n            slots.splice(phrase, 1);\n        }\n        el.addEventListener( 'click', () => {\n            classToggle(el);\n        });\n    });\n} document.addEventListener( 'load', initBingo() );"]}