{"version":3,"sources":["fanedit.js"],"names":["bgArray","itemArray","document","getElementsByClassName","length","i","img","Math","floor","random","style","backgroundImage","splice","window","console","log","addPageLoad_Handler","$","each","dragElement","resizeElement","container","cur","this","width","find","css","on","e","addClass","startX","pageX","originalEvent","touches","dragWidth","outerWidth","posX","offset","left","containerOffset","containerWidth","minLeft","maxLeft","parents","moveX","leftValue","widthValue","removeClass","preventDefault","addResize_Handler"],"mappings":"yBACC,IAAIA,EAAU,CACb,YACA,WACA,UACA,cACA,oBACA,iBACA,cACA,eACA,aAEGC,EAAYC,SAASC,uBAAuB,eAChD,GAAIF,EAAUG,OAAS,GAAKJ,EAAQI,OAASH,EAAUG,OACtD,IAAKC,EAAE,EAAGA,EAAEJ,EAAUG,OAAQC,IAAK,CAClC,IAAIC,EAAMC,KAAKC,MAAMD,KAAKE,SAAWT,EAAQI,QAC7CH,EAAUI,GAAGK,MAAMC,gBAAkB,cAAgBX,EAAQM,GAAO,QACpEN,EAAQY,OAAON,EAAI,QAGpBO,OAAOC,SAAWA,QAAQC,IAAI,2CAK/BD,QAAQC,IAAI,OAYXC,oBAVD,WACCF,QAAQC,IAAI,OACXE,EAAE,oBAAoBC,KAAK,WACzB,IAmBWC,EAAaC,EAAeC,EAnBnCC,EAAML,EAAEM,MAERC,EAAQF,EAAIE,QAAQ,KACxBF,EAAIG,KAAK,wBAAwBC,IAAI,QAASF,GAgBnCL,EAdLG,EAAIG,KAAK,oBAcSL,EAdYE,EAAIG,KAAK,oBAcNJ,EAd2BC,EAiBpEH,EAAYQ,GAAG,uBAAwB,SAASC,GAE9CT,EAAYU,SAAS,aACrBT,EAAcS,SAAS,aAGvB,IAAIC,EAAUF,EAAEG,MAASH,EAAEG,MAAQH,EAAEI,cAAcC,QAAQ,GAAGF,MAG1DG,EAAYf,EAAYgB,aACxBC,EAAOjB,EAAYkB,SAASC,KAAOJ,EAAYJ,EAC/CS,EAAkBlB,EAAUgB,SAASC,KACrCE,EAAiBnB,EAAUc,aAG/BM,QAAUF,EAAkB,GAC5BG,QAAUH,EAAkBC,EAAiBN,EAAY,GAGzDf,EAAYwB,UAAUhB,GAAG,sBAAuB,SAASC,GAGvD,IAAIgB,EAAShB,EAAEG,MAASH,EAAEG,MAAQH,EAAEI,cAAcC,QAAQ,GAAGF,MAE7Dc,UAAYD,EAAQR,EAAOF,EAGtBW,UAAYJ,QACfI,UAAYJ,QACHI,UAAYH,UACrBG,UAAYH,SAIdI,WAAyD,KAA3CD,UAAYX,EAAU,EAAIK,GAAqBC,EAAe,IAI5EvB,EAAE,cAAcS,IAAI,OAAQoB,YAAYnB,GAAG,+BAAgC,WACzEV,EAAEM,MAAMwB,YAAY,aACpB3B,EAAc2B,YAAY,eAE5B9B,EAAE,cAAcS,IAAI,QAASoB,cAC5BnB,GAAG,+BAAgC,WACpCR,EAAY4B,YAAY,aACxB3B,EAAc2B,YAAY,eAE5BnB,EAAEoB,mBACDrB,GAAG,+BAAgC,SAASC,GAC7CT,EAAY4B,YAAY,aACxB3B,EAAc2B,YAAY,mBAvD7BE,kBAND,WACEhC,EAAE,oBAAoBC,KAAK,WACzB,IAAII,EAAML,EAAEM,MACRC,EAAQF,EAAIE,QAAQ,KACxBF,EAAIG,KAAK,wBAAwBC,IAAI,QAASF","sourcesContent":["// Randomize BGs for info-items\n\tvar bgArray = [\n\t\t'a_faraizl',\n\t\t'a_otoole',\n\t\t'b_crane',\n\t\t'it-cave-tcc',\n\t\t'it-deadlights-tcc',\n\t\t'it-georgie-tcc',\n\t\t'it-mike-tcc',\n\t\t'it-plate-tcc',\n\t\t'j_brandis'\n\t];\n\tvar itemArray = document.getElementsByClassName('info__image');\n\tif (itemArray.length > 0 && bgArray.length > itemArray.length) {\n\t\tfor (i=0; i<itemArray.length; i++) {\n\t\t\tvar img = Math.floor(Math.random() * bgArray.length);\n\t\t\titemArray[i].style.backgroundImage = \"url(images/\" + bgArray[img] + \".jpg)\";\n\t\t\tbgArray.splice(img,1);\n\t\t}\n\t} else {\n\t\twindow.console && console.log('There are not enough images defined to ');\n\t}\n\n// Image comparison\n\t// Call & init\n\tconsole.log(\"PRE\");\n\n\tfunction compareInit(){\n\t\tconsole.log(\"RUN\");\n\t  $('.compare__slider').each(function(){\n\t    var cur = $(this);\n\t    // Adjust the slider\n\t    var width = cur.width()+'px';\n\t    cur.find('.compare__resize img').css('width', width);\n\t    // Bind dragging events\n\t    drags(cur.find('.compare__handle'), cur.find('.compare__resize'), cur);\n\t  });\n\t}addPageLoad_Handler(compareInit);\n\n\t// Update sliders on resize. \n\t// Because we all do this: i.imgur.com/YkbaV.gif\n\tfunction compareResize(){\n\t  $('.compare__slider').each(function(){\n\t    var cur = $(this);\n\t    var width = cur.width()+'px';\n\t    cur.find('.compare__resize img').css('width', width);\n\t  });\n\t}addResize_Handler(compareResize);\n\n\tfunction drags(dragElement, resizeElement, container) {\n\t\t\n\t  // Initialize the dragging event on mousedown.\n\t  dragElement.on('mousedown touchstart', function(e) {\n\t    \n\t    dragElement.addClass('draggable');\n\t    resizeElement.addClass('resizable');\n\t    \n\t    // Check if it's a mouse or touch event and pass along the correct value\n\t    var startX = (e.pageX) ? e.pageX : e.originalEvent.touches[0].pageX;\n\t    \n\t    // Get the initial position\n\t    var dragWidth = dragElement.outerWidth(),\n\t        posX = dragElement.offset().left + dragWidth - startX,\n\t        containerOffset = container.offset().left,\n\t        containerWidth = container.outerWidth();\n\t \n\t    // Set limits\n\t    minLeft = containerOffset + 10;\n\t    maxLeft = containerOffset + containerWidth - dragWidth - 10;\n\t    \n\t    // Calculate the dragging distance on mousemove.\n\t    dragElement.parents().on(\"mousemove touchmove\", function(e) {\n\t    \t\n\t      // Check if it's a mouse or touch event and pass along the correct value\n\t      var moveX = (e.pageX) ? e.pageX : e.originalEvent.touches[0].pageX;\n\t      \n\t      leftValue = moveX + posX - dragWidth;\n\t      \n\t      // Prevent going off limits\n\t      if ( leftValue < minLeft) {\n\t        leftValue = minLeft;\n\t      } else if (leftValue > maxLeft) {\n\t        leftValue = maxLeft;\n\t      }\n\t      \n\t      // Translate the handle's left value to masked divs width.\n\t      widthValue = (leftValue + dragWidth/2 - containerOffset)*100/containerWidth+'%';\n\t\t\t\t\n\t      // Set the new values for the slider and the handle. \n\t      // Bind mouseup events to stop dragging.\n\t      $('.draggable').css('left', widthValue).on('mouseup touchend touchcancel', function () {\n\t        $(this).removeClass('draggable');\n\t        resizeElement.removeClass('resizable');\n\t      });\n\t      $('.resizable').css('width', widthValue);\n\t    }).on('mouseup touchend touchcancel', function(){\n\t      dragElement.removeClass('draggable');\n\t      resizeElement.removeClass('resizable');\n\t    });\n\t    e.preventDefault();\n\t  }).on('mouseup touchend touchcancel', function(e){\n\t    dragElement.removeClass('draggable');\n\t    resizeElement.removeClass('resizable');\n\t  });\n\t}\n\n\n"]}